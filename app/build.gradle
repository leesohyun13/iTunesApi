plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.sohyun.itunes"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        dataBinding true
    }
    dynamicFeatures = []
}

dependencies {
    implementation Dependencies.kotlin
    implementation Dependencies.core
    implementation Dependencies.appcompat
    implementation Dependencies.material
    implementation Dependencies.constraintlayout
    implementation Dependencies.preference
    implementation Dependencies.legacy
    implementation Dependencies.junit
    implementation Dependencies.testJunit
    implementation Dependencies.espresso

    implementation Dependencies.multidex

    // Lifecycle
    implementation Dependencies.lifecycleExtension
    implementation Dependencies.viewModelLifecycle
    implementation Dependencies.livedataLifecycle
    kapt Dependencies.lifecycleCompiler

    // navigation
    implementation Dependencies.navigationFragment
    implementation Dependencies.navigationUi

    // Activity/Fragment Kotlin Extension
    implementation Dependencies.activity
    implementation Dependencies.fragment
    implementation Dependencies.livedataLifecycle
    implementation Dependencies.livedataLifecycle

    // Retrofit: type-safe한 HTTP 통신
    implementation Dependencies.retrofit
    implementation Dependencies.retrofitGson

    // Hilt: 의존성 주입
    implementation Dependencies.hilt
    kapt Dependencies.hiltCompiler

    // Room: 데이터를 저장하기 위한 local DB
    implementation Dependencies.room
    implementation Dependencies.roomRuntime
    kapt Dependencies.runCompiler

    // Glide: 이미지 처리 (이미지 로드와 캐싱을 도와주는 라이브러리)
    implementation Dependencies.glide
    kapt Dependencies.glideCompiler

    // Page3: 페이징 라이브러리(데이터 특정 개수만큼 다운로드 및 캐싱할 수 있도록 도롸주는 라이브러리)
    implementation Dependencies.pagingRuntime
}

kapt {
    correctErrorTypes true
}